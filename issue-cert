#!/bin/bash
# Issue New Cert from Chosen CA

# Base Variables
#set -x
CA="BrainCraft.io"
PREFIX=/root/simpleca
CONFIG=${PREFIX}/openssl.cnf
req_DIR=${PREFIX}/signing_requests
CA_DIR=${PREFIX}/${CA}
CA_ISSUER=${PREFIX}/${CA}/issuer
target_DIR=${CA_DIR}/provisioned_clients


# Status / Error Logging & Exit Function
run_log () {
	echo $2
	[[ $1 == "0" ]] || exit $?
}

echo "Generating OpenSSL Certificate, Private key, and PKCS12 Key File."
read -p 'Enter New Certificate Name: ' cert_NAME
[[ ! -z "$cert_NAME" ]] \
        && run_log 0 "Issuing New Certificate: ${cert_NAME}" \
        || run_log 1 "Certificate Name Cannot Be Empty!"

# Create Directory for issued certificates & keys
client_DIR="${target_DIR}/${cert_NAME}"
mkdir ${client_DIR}
echo "Writing Files to ${client_DIR}"

read -sp 'Enter New Certificate Password: ' cert_PWD
read -sp 'Confirm New Certificate Password: ' cert_PWD_CONF
[[ ${cert_PWD} == ${cert_PWD_CONF} ]] \
        && run_log 0 "${cert_NAME} Password Confirmed Successfully!" \
        || run_log 1 "Password Does Not Match!"

[[ ! -z "$cert_PWD" ]] && run_log 0 \
                       || run_log 1 "Certificate Password Cannot Be Empty!"

# Create a client certificate request and private key
run_MSG="Generate private key & certificate signing request for ${cert_NAME}"
openssl req -config ${CONFIG}                   \
	-new					\
	-addext "subjectAltName = DNS:${cert_NAME}" \
	-keyout ${client_DIR}/${cert_NAME}_PrivateKey.pem     \
	-out ${req_DIR}/${cert_NAME}_SigningReq.pem	\
	-days 730				\
	-passout pass:${cert_PWD}

[[ $? == "0" ]] \
	&& run_log 0 "${run_MSG}" \
	|| run_log 1 "Failed to ${run_MSG}"

# Sign client certificate with CA's private key
run_MSG="Sign certificate for: ${cert_NAME}"
openssl ca -config ${CONFIG}			\
	-policy policy_anything			\
	-key capwd				\
	-out ${client_DIR}/${cert_NAME}_Certificate.pem	\
	-passin pass:${cert_PWD}                \
	-infiles ${req_DIR}/${cert_NAME}_SigningReq.pem

[[ $? == "0" ]] \
	&& run_log 0 "${run_MSG}" \
	|| run_log 1 "Failed to ${run_MSG}"

# Export PKCS#12 version of the client certificate
run_MSG="Create PKCS12 Key File"
openssl pkcs12					\
	-export					\
	-in ${client_DIR}/${cert_NAME}_Certificate.pem			\
	-inkey ${client_DIR}/${cert_NAME}_PrivateKey.pem			\
	-out ${client_DIR}/${cert_NAME}_PrivateKey.p12			\
	-clcerts				\
	-passin pass:${cert_PWD}			\
	-passout pass:${cert_PWD}

[[ $? == "0" ]] \
	&& run_log 0 "Success: ${run_MSG}" \
	|| run_log 1 "Failed to Issue New Certificate for ${cert_NAME}"

cp ${CA_ISSUER}/BrainCraft.io_CertAuthority_PubCertificate.pem ${client_DIR}/
tar -Jcvf ${client_DIR}/${cert_NAME}-bundle.tar.xz ${client_DIR}/ ; echo "Created Bundle"
run_MSG="Completed Client Certificate Enrollment"
run_log 0 "${run_MSG}"
rm -f ${req_DIR}/${cert_NAME}_SigningReq.pem \
